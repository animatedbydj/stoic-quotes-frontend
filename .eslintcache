[{"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/reportWebVitals.js":"1","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/App.js":"2","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Error.js":"3","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Quotes.js":"4","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Navbar.js":"5","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Home.js":"6","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/RandomQuote.js":"7","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/index.js":"8","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Docs.js":"9","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Quote.js":"10"},{"size":362,"mtime":1606664037221,"results":"11","hashOfConfig":"12"},{"size":680,"mtime":1607218756463,"results":"13","hashOfConfig":"12"},{"size":107,"mtime":1606700614260,"results":"14","hashOfConfig":"12"},{"size":2580,"mtime":1607277432302,"results":"15","hashOfConfig":"12"},{"size":852,"mtime":1607189153238,"results":"16","hashOfConfig":"12"},{"size":760,"mtime":1607481365383,"results":"17","hashOfConfig":"12"},{"size":1511,"mtime":1607274950818,"results":"18","hashOfConfig":"12"},{"size":579,"mtime":1606705376881,"results":"19","hashOfConfig":"12"},{"size":2485,"mtime":1607232647303,"results":"20","hashOfConfig":"12"},{"size":406,"mtime":1607156323726,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p8n61y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/reportWebVitals.js",[],["49","50"],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/App.js",["51"],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Error.js",[],["52","53"],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Quotes.js",["54"],"import React, { useEffect, useState } from \"react\";\nimport Quote from \"./Quote\";\nfunction Quotes() {\n  const [pageCount, setPageCount] = useState(1);\n  const [isLoaded, setisLoaded] = useState(false);\n  const [currentPage, setcurrentPage] = useState(1);\n  const [authorQuery, setAuthorQuery] = useState(\"\");\n  const URL = `https://stoicquotesapi.com/v1/api/quotes${authorQuery}?page=${currentPage}`;\n  const [quotes, setQuotes] = useState([]);\n\n  useEffect(() => {\n    const fetchQuotes = async () => {\n      fetch(URL)\n        .then((response) => response.json())\n        .then((body) => {\n          setQuotes([...body.data]);\n          setPageCount(body.last_page);\n\n          setisLoaded(true);\n        })\n        .catch((error) => console.error(\"Error\", error));\n    };\n    fetchQuotes();\n  }, [setPageCount, currentPage, setisLoaded, isLoaded]);\n\n  const handlePageChange = (e) => {\n    setisLoaded(false);\n    setAuthorQuery(e.target.value);\n\n    setcurrentPage(1);\n  };\n  var pagebuttons = [];\n  for (let i = 1; i < pageCount; i++) {\n    pagebuttons.push(\n      <button\n        key={i}\n        onClick={() => setcurrentPage(i)}\n        className={currentPage === i ? \"bg-white text-black\" : null}\n      >\n        {i}\n      </button>\n    );\n  }\n  const scrollToTop = () => {\n    document.documentElement.scrollTop = 0;\n  };\n\n  return (\n    <div>\n      <h1 className='text-2xl text-center mb-6'>\n        Quotes from ancient stoic philosophers. Filter by author.\n      </h1>\n\n      <select\n        value={authorQuery}\n        onChange={handlePageChange}\n        className='text-black font-bold text-xl mx-auto block py-2 px-4'\n      >\n        <option value=''>All Quotes - Select Author</option>\n        <option value='/Marcus%20Aurelius'>Marcus Aurelius</option>\n        <option value='/Seneca'>Seneca</option>\n        <option value='/Epictetus'>Epictetus</option>\n        <option value='/Cato'>Cato</option>\n        <option value='/Zeno'>Zeno</option>\n      </select>\n\n      <ul className='quotesList'>\n        {quotes.map((quote) => (\n          <Quote id={quote.id} body={quote.body} author={quote.author} />\n        ))}\n      </ul>\n      <div className='paginationButtons w-1/2 mx-auto flex justify-center my-16'>\n        {isLoaded ? <>{pagebuttons}</> : <div>Nothing to display</div>}\n      </div>\n      <button\n        className='text-6xl text-center block ml-auto mr-32 mb-6 flex flex-col justify-center'\n        onClick={() => scrollToTop()}\n      >\n        ^<span className='text-xl block'>Back To Top</span>\n      </button>\n    </div>\n  );\n}\n\nexport default Quotes;\n","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Navbar.js",[],["55","56"],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Home.js",[],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/RandomQuote.js",["57"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport marcusaureliusimg from \"../img/marcusaurelius.png\";\nimport senecaimg from \"../img/seneca.png\";\nimport epictetusimg from \"../img/epictetus.png\";\nimport catoimg from \"../img/cato.png\";\nimport zenoimg from \"../img/zeno.png\";\nfunction RandomQuote() {\n  const [quote, setQuote] = useState([]);\n\n  useEffect(() => {\n    const fetchQuote = async () => {\n      fetch(\"https://stoicquotesapi.com/v1/api/quotes/random\")\n        .then((response) => response.json())\n        .then((data) => {\n          setQuote(data);\n        });\n    };\n    fetchQuote();\n  }, []);\n\n  return (\n    <div className='w-8/12 mx-auto mt-2 md:mt-32'>\n      <div className='quote'>\n        <h1 className='font-span text-4xl md:text-6xl'>\"{quote.body}\"</h1>\n        <p className='text-2xl md:text-4xl mt-8 ml-auto w-1/2 text-right'>\n          - {quote.author}\n        </p>\n\n        {quote.author_id === 1 ? (\n          <img src={marcusaureliusimg} className='mx-auto' alt='' />\n        ) : quote.author_id === 2 ? (\n          <img src={senecaimg} className='mx-auto' alt='' />\n        ) : quote.author_id === 3 ? (\n          <img src={epictetusimg} className='mx-auto' alt='' />\n        ) : quote.author_id === 4 ? (\n          <img src={catoimg} className='mx-auto' alt='' />\n        ) : quote.author_id === 5 ? (\n          <img src={zenoimg} className='w-3/12 md:w-1/12 mx-auto' alt='' />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default RandomQuote;\n","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/index.js",["58","59"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Docs.js",[],["60","61"],"/home/dj/app-planning/stoic-quotes/stoic-quotes-frontend/src/components/Quote.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":6,"nodeType":"74","endLine":24,"endColumn":56,"suggestions":"75"},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},{"ruleId":"66","severity":1,"message":"78","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"66","severity":1,"message":"79","line":6,"column":25,"nodeType":"68","messageId":"69","endLine":6,"endColumn":30},{"ruleId":"66","severity":1,"message":"80","line":6,"column":32,"nodeType":"68","messageId":"69","endLine":6,"endColumn":38},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar",["83"],["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'URL'. Either include it or remove the dependency array.","ArrayExpression",["85"],["83"],["84"],"'axios' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.",["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [setPageCount, currentPage, setisLoaded, isLoaded, URL]",{"range":"88","text":"89"},[798,848],"[setPageCount, currentPage, setisLoaded, isLoaded, URL]"]